"""add foreign key to seats table

Revision ID: c8da058b072c
Revises: 27cd9a14b75f
Create Date: 2025-05-28 02:39:51.968982

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'c8da058b072c'
down_revision: Union[str, None] = '27cd9a14b75f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    
    # 1. PERBAIKAN: Drop foreign key constraint DULU sebelum drop table
    op.drop_constraint(op.f('seats_schedule_id_fkey'), 'seats', type_='foreignkey')
    
    # 2. Baru drop table schedules
    op.drop_table('schedules')
    
    # 3. Create table schedule yang baru
    op.create_table('schedule',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('bus_id', sa.Integer(), nullable=True),
    sa.Column('route_id', sa.Integer(), nullable=True),
    sa.Column('departure_time', sa.DateTime(), nullable=False),
    sa.Column('price', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['bus_id'], ['buses.id'], ),
    sa.ForeignKeyConstraint(['route_id'], ['routes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    
    # 4. Update constraints dan columns
    op.create_unique_constraint(None, 'buses', ['name'])
    op.alter_column('routes', 'duration',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('seats', 'seat_number',
               existing_type=sa.VARCHAR(),
               nullable=False)
    
    # 5. Create foreign key baru yang mengarah ke table 'schedule'
    op.create_foreign_key(None, 'seats', 'schedule', ['schedule_id'], ['id'])
    
    # 6. Update tickets columns
    op.alter_column('tickets', 'seat_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('tickets', 'customer_name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('tickets', 'booking_code',
               existing_type=sa.VARCHAR(),
               nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('tickets', 'booking_code',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('tickets', 'customer_name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('tickets', 'seat_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_constraint(None, 'seats', type_='foreignkey')
    op.create_foreign_key(op.f('seats_schedule_id_fkey'), 'seats', 'schedules', ['schedule_id'], ['id'])
    op.alter_column('seats', 'seat_number',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('routes', 'duration',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_constraint(None, 'buses', type_='unique')
    op.create_table('schedules',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('bus_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('route_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('departure_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['bus_id'], ['buses.id'], name=op.f('schedules_bus_id_fkey')),
    sa.ForeignKeyConstraint(['route_id'], ['routes.id'], name=op.f('schedules_route_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('schedules_pkey'))
    )
    op.drop_table('schedule')
    # ### end Alembic commands ###