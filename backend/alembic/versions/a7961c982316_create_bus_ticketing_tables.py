"""create_bus_ticketing_tables

Revision ID: a7961c982316
Revises: 
Create Date: 2025-05-26 17:05:47.189514

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a7961c982316'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('buses',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('capacity', sa.Integer(), nullable=False),
    sa.Column('bus_class', sa.Enum('ECONOMY', 'BUSINESS', name='bus_class_enum'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_buses')),
    sa.UniqueConstraint('name', name=op.f('uq_buses_name'))
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('role', sa.Enum('USER', 'ADMIN', name='user_role_enum'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users')),
    sa.UniqueConstraint('email', name=op.f('uq_users_email'))
    )
    op.create_table('schedules',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('bus_id', sa.Integer(), nullable=False),
    sa.Column('origin_location', sa.String(length=255), nullable=False),
    sa.Column('destination_location', sa.String(length=255), nullable=False),
    sa.Column('departure_time', sa.DateTime(), nullable=False),
    sa.Column('arrival_time', sa.DateTime(), nullable=False),
    sa.Column('price', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.ForeignKeyConstraint(['bus_id'], ['buses.id'], name=op.f('fk_schedules_bus_id_buses')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_schedules'))
    )
    op.create_table('bookings',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('schedule_id', sa.Integer(), nullable=False),
    sa.Column('seat_number', sa.String(length=10), nullable=False),
    sa.Column('total_price', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'PAID', 'CANCELLED', name='booking_status_enum'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('booking_time', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['schedule_id'], ['schedules.id'], name=op.f('fk_bookings_schedule_id_schedules')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_bookings_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_bookings'))
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('bookings')
    op.drop_table('schedules')
    op.drop_table('users')
    op.drop_table('buses')
    # ### end Alembic commands ###
